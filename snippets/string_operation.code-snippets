{
	"": {
		"prefix": "string operation",
		"body": [
		  "string Addition(string a,string b);",
		  "string Multiplication(string a,string b);",
		  "string Multiplication(string a,ll k);",
		  "string Subtraction(string a,string b);",
		  "string Division(string a,string b);",
		  "string Division(string a,ll k);",
		  "string Div_mod(string a,string b);",
		  "ll Div_mod(string a,ll k);",
		  "string cut_leading_zero(string a);",
		  "ll compare(string a,string b);",
		  "",
		  "string Multiplication(string a,string b){",
		  "    ll i,j,multi,carry;",
		  "    string ans,temp;",
		  "    ans=\"0\";",
		  "    Fo(j,SZ(b)-1,-1){",
		  "        temp=\"\";",
		  "        carry=0;",
		  "        Fo(i,SZ(a)-1,-1){",
		  "            multi=(a[i]-'0')*(b[j]-'0')+carry;",
		  "            temp+=(multi%10+'0');",
		  "            carry=multi/10;",
		  "        }",
		  "        if(carry) temp+=(carry+'0');",
		  "        rev(temp);",
		  "        temp+=string(SZ(b)-j-1,'0');",
		  "        ans=Addition(ans,temp);",
		  "    }",
		  "    ans=cut_leading_zero(ans);",
		  "    return ans;",
		  "}",
		  "",
		  "string Multiplication(string a,ll k){",
		  "    string ans;",
		  "    ll i,sum,carry=0;",
		  "    Fo(i,SZ(a)-1,-1){",
		  "        sum=(a[i]-'0')*k+carry;",
		  "        carry=sum/10;",
		  "        ans+=(sum%10)+'0';",
		  "    }",
		  "    while(carry){",
		  "        ans+=(carry%10)+'0';",
		  "        carry/=10;",
		  "    }",
		  "    rev(ans);",
		  "    ans=cut_leading_zero(ans);",
		  "    return ans;",
		  "}",
		  "",
		  "string Addition(string a,string b){",
		  "    ll carry=0,i;",
		  "    string ans;",
		  "    if(SZ(a)>SZ(b)) b=string(SZ(a)-SZ(b),'0')+b;",
		  "    if(SZ(b)>SZ(a)) a=string(SZ(b)-SZ(a),'0')+a;",
		  "    ans.resize(SZ(a));",
		  "    Fo(i,SZ(a)-1,-1){",
		  "        ll sum=carry+a[i]+b[i]-96;",
		  "        ans[i]=sum%10+'0';",
		  "        carry=sum/10;",
		  "    }",
		  "    if(carry) ans.insert(0,string(1,carry+'0'));",
		  "    ans=cut_leading_zero(ans);",
		  "    return ans;",
		  "}",
		  "",
		  "string Subtraction(string a,string b){",
		  "    ll borrow=0,i,sub;",
		  "    string ans;",
		  "    if(SZ(b)<SZ(a)) b=string(SZ(a)-SZ(b),'0')+b;",
		  "    Fo(i,SZ(a)-1,-1){",
		  "        sub=a[i]-b[i]-borrow;",
		  "        if(sub<0){",
		  "            sub+=10;",
		  "            borrow=1;",
		  "        }else{",
		  "            borrow=0;",
		  "        }",
		  "        ans+=sub+'0';",
		  "    }",
		  "    rev(ans);",
		  "    ans=cut_leading_zero(ans);",
		  "    return ans;",
		  "}",
		  "",
		  "string Division(string a,string b){",
		  "    string mod, temp, ans=\"0\";",
		  "    ll i, j;",
		  "",
		  "    fo(i,SZ(a)){",
		  "        mod+=a[i];",
		  "        mod=cut_leading_zero(mod);",
		  "        fo(j,10){",
		  "            temp=Multiplication(b,j);",
		  "            if(compare(temp,mod)==1) break;",
		  "        }",
		  "        temp=Multiplication(b,j-1);",
		  "        mod=Subtraction(mod,temp);",
		  "        ans+=(j-1)+'0';",
		  "    }",
		  "    mod=cut_leading_zero(mod);",
		  "    ans=cut_leading_zero(ans);",
		  "    return ans;",
		  "}",
		  "",
		  "string Division(string a,ll k){",
		  "    ll i, sum=0;",
		  "    string ans = \"0\";",
		  "",
		  "    fo(i,SZ(a)){",
		  "        sum=(sum*10+(a[i]-'0'));",
		  "        ans+=(sum/k)+'0';",
		  "        sum=sum%k;",
		  "    }",
		  "    ans=cut_leading_zero(ans);",
		  "    return ans;",
		  "}",
		  "",
		  "string Div_mod(string a,string b){",
		  "    string mod, temp, ans=\"0\";",
		  "    ll i, j;",
		  "",
		  "    fo(i,SZ(a)){",
		  "        mod+=a[i];",
		  "        mod=cut_leading_zero(mod);",
		  "",
		  "        Fo(j,1,10){",
		  "            temp=Multiplication(b,j);",
		  "            if(compare(temp,mod)>0) break;",
		  "        }",
		  "        temp=Multiplication(b,j-1);",
		  "        mod=Subtraction(mod,temp);",
		  "        ans+=(j-1)+'0';",
		  "    }",
		  "    mod=cut_leading_zero(mod);",
		  "    ans=cut_leading_zero(ans);",
		  "    return mod;",
		  "}",
		  "",
		  "ll Div_mod(string a,ll k){",
		  "    ll i, sum=0;",
		  "    fo(i,SZ(a)) sum=(sum*10+(a[i]-'0'))%k;",
		  "    return sum;",
		  "}",
		  "",
		  "ll compare(string a,string b){",
		  "    ll i;",
		  "    a=cut_leading_zero(a);",
		  "    b=cut_leading_zero(b);",
		  "",
		  "    if(SZ(a)>SZ(b)) return 1;",
		  "    if(SZ(a)<SZ(b)) return -1;",
		  "    fo(i,SZ(a))",
		  "    {",
		  "        if( a[i]>b[i] ) return 1;",
		  "        else if(a[i]<b[i]) return -1;",
		  "    }",
		  "    return 0;",
		  "}",
		  "",
		  "string cut_leading_zero(string a){",
		  "    string s;",
		  "    ll i,j;",
		  "    if(a[0]!='0') return a;",
		  "    fo(i,SZ(a)-1) if(a[i]!='0') break;",
		  "    Fo(j,i,SZ(a)) s+=a[j];",
		  "    return s;",
		  "}"
		],
		"description": ""
	  }
}