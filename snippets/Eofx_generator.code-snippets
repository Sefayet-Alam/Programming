{
	"generates prime factorization for n!": {
		"prefix": "Eofx_generator",
		"body": [
		  "vector<bool> Primes(N,1);",
		  "vector<ll>primenos;",
		  "void SieveOfEratosthenes(ll n)",
		  "{",
		  "    Primes[1]=0;",
		  "    for (ll i=2;i*i<=n;i++) {",
		  "    if(Primes[i]==1){     ",
		  "    for(ll j=i*i;j<=n;j+=i)",
		  "        Primes[j]=0;",
		  "        }",
		  "    }",
		  "    for(ll i=1;i<n;i++){",
		  "        if(Primes[i]){",
		  "            primenos.push_back(i);",
		  "        }",
		  "    }",
		  "}",
		  "//generates prime factorization for n!",
		  "int main()",
		  "{",
		  "    fast;",
		  "     ll t;",
		  "    //setIO();",
		  "     //ll tno=1;;",
		  "     t=1;",
		  "    cin>>t;",
		  "    SieveOfEratosthenes(N);",
		  "    while(t--){",
		  "      ll n,m,c;",
		  "      cin>>n>>m>>c;",
		  "      map<ll,ll>factofn;",
		  "      ll cnt,r;",
		  "      for(auto it:primenos){",
		  "        if(it>n) break;",
		  "        cnt=1;",
		  "        while(1){",
		  "             r=n/(pow(it,cnt));",
		  "            if(r==0){break;}",
		  "            cnt++;",
		  "            factofn[it]+=r;",
		  "        }",
		  "      }",
		  "      for(auto it:factofn){",
		  "        cout<<it.first<<\" \"<<it.second<<endl;",
		  "      }",
		  "    }",
		  "",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": "generates prime factorization for n!"
	  }
}