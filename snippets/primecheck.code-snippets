{
	"": {
		"prefix": "prime check(Miller-Rabin)",
		"body": [
		  "/* This function calculates (ab)%c */",
		  "int modulo(int a,int b,int c){",
		  "    ll x=1,y=a; // long long is taken to avoid overflow of intermediate results",
		  "    while(b > 0){",
		  "        if(b%2 == 1){",
		  "            x=(x*y)%c;",
		  "        }",
		  "        y = (y*y)%c; // squaring the base",
		  "        b /= 2;",
		  "    }",
		  "    return (x%c);",
		  "}",
		  "",
		  "/* this function calculates (a*b)%c taking into account that a*b might overflow */",
		  "ll mulmod(ll a,ll b,ll c){",
		  "    ll x = 0,y=a%c;",
		  "    while(b > 0){",
		  "        if(b%2 == 1){",
		  "            x = (x+y)%c;",
		  "        }",
		  "        y = (y*2)%c;",
		  "        b /= 2;",
		  "    }",
		  "    return x%c;",
		  "}",
		  "",
		  "/* Miller-Rabin primality test, iteration signifies the accuracy of the test */",
		  "bool Miller(ll p,int iteration){",
		  "    if(p<2){",
		  "        return false;",
		  "    }",
		  "    if(p!=2 && p%2==0){",
		  "        return false;",
		  "    }",
		  "    ll s=p-1;",
		  "    while(s%2==0){",
		  "        s/=2;",
		  "    }",
		  "    for(int i=0;i<iteration;i++){",
		  "        ll a=rand()%(p-1)+1,temp=s;",
		  "        ll mod=modulo(a,temp,p);",
		  "        while(temp!=p-1 && mod!=1 && mod!=p-1){",
		  "            mod=mulmod(mod,mod,p);",
		  "            temp *= 2;",
		  "        }",
		  "        if(mod!=p-1 && temp%2==0){",
		  "        return false;",
		  "        }",
		  "    }",
		  "    return true;",
		  "}"
		],
		"description": ""
	  }
}