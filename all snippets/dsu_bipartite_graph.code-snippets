{
	"Bipartite graph, len[x]=color of x": {
		"prefix": "dsu_bipartite_graph",
		"body": [
		  "ll par[N];",
		  "ll sz[N];",
		  "ll len[N];",
		  "// multiset<int> sizes;",
		  "",
		  "void make(ll v){",
		  "    par[v]=v;",
		  "    sz[v]=1;",
		  "    len[v]=0;",
		  "    // sizes.insert(1);",
		  "}",
		  "",
		  "pair<ll,ll> find(ll v){",
		  "    if(v==par[v]) return {v,0};",
		  "    auto val=find(par[v]);",
		  "    par[v] = val.first;",
		  "    len[v] = (len[v] + val.second) % 2;",
		  "     return {par[v], len[v]};",
		  "}",
		  "",
		  "// void merge(int a,int b){",
		  "//     sizes.erase(sizes.find(sz[a]));",
		  "//     sizes.erase(sizes.find(sz[b]));",
		  "//     sizes.insert(sz[a]+sz[b]);",
		  "// }",
		  "",
		  "void Union(ll A,ll B){",
		  "    auto a=find(A);",
		  "    auto b=find(B);",
		  "    if(a!=b){",
		  "        if(sz[a.first]>=sz[b.first]) swap(a,b);",
		  "        par[a.first]=b.first;",
		  "        // merge(a,b);",
		  "        sz[b.first]+=sz[a.first];",
		  "        len[a.first] = (1 +a.second + b.second) %2;",
		  "    }",
		  "}",
		  "int main()",
		  "{",
		  "    fast;",
		  "     ll t;",
		  "    //setIO();",
		  "     //ll tno=1;;",
		  "     t=1;",
		  "    //cin>>t;",
		  "",
		  "    while(t--){",
		  "      ll n,q,shift=0;",
		  "      cin>>n>>q;",
		  "      for(ll i=1;i<=n;i++){",
		  "        make(i);",
		  "      }",
		  "      ll u,x,y;",
		  "      while(q--){",
		  "        cin>>u>>x>>y;",
		  "        x=(x+shift)%n;",
		  "        y=(y+shift)%n;",
		  "        if(u==0){",
		  "            //union of x and y node",
		  "            Union(x,y);",
		  "            //    cout<<len[x]<<\" \"<<len[y]<<endl;",
		  "        }",
		  "        else{",
		  "            // check if color of these two nodes are same",
		  "            // cout<<len[x]<<\" \"<<len[y]<<endl;",
		  "            auto px=find(x);",
		  "            auto py=find(y);",
		  "            // cout<<len[px.first]<<\" \"<<len[py.first]<<endl;",
		  "            // cout<<px.second<<\" \"<<py.second<<endl;",
		  "            if(px.second==py.second){",
		  "                cout<<\"YES\"<<nn;",
		  "                shift=(shift+1)%n;",
		  "            }",
		  "            else{",
		  "                cout<<\"NO\"<<nn;",
		  "            }",
		  "        }",
		  "      }",
		  "    }",
		  "",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": "Bipartite graph, len[x]=color of x"
	  }
}