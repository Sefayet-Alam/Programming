{
	"subarrays_equal_to_len": {
		"prefix": "subarrays_equal_to_len",
		"body": [
		  "ll countOfSubarray(vector<ll> &arr,ll n)",
		  "{",
		  "    // Decrementing all the elements",
		  "    // of the array by 1",
		  "    for (ll i = 0; i < n; i++)",
		  "        arr[i]--;",
		  " ",
		  "    // Making prefix sum array",
		  "    ll pref[n];",
		  "    pref[0] = arr[0];",
		  " ",
		  "    for (ll i = 1; i < n; i++)",
		  "        pref[i] = pref[i - 1] + arr[i];",
		  " ",
		  "    // Declare map to store count of",
		  "    // elements upto current element",
		  "    map<ll, ll> mpp;",
		  "    ll answer = 0;",
		  " ",
		  "    // To count all the subarrays",
		  "    // whose prefix sum is 0",
		  "    mpp[0]++;",
		  " ",
		  "    // Iterate the array",
		  "    for (ll i = 0; i < n; i++) {",
		  " ",
		  "        // Increment answer by count of",
		  "        // current element of prefix array",
		  "        answer += mpp[pref[i]];",
		  "        mpp[pref[i]]++;",
		  "    }",
		  " ",
		  "    // Return the answer",
		  "    return answer;",
		  "}",
		  " "
		],
		"description": "subarrays_equal_to_len"
	  }
}