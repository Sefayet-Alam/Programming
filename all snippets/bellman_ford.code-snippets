{
	"bellman_ford": {
		"prefix": "bellman_ford",
		"body": [
		  "#define INF 1000000009",
		  "vpll g[N];",
		  "ll n,m;",
		  "vl dist(N,INF);",
		  "vl par(N,-1);",
		  "void bellman_ford(){",
		  "    ll x=-1;",
		  "    for(ll i=1;i<=n;i++){ dist[i]=INF;par[i]=-1;}",
		  "    dist[1]=0;",
		  "   ",
		  "    for(ll i=0; i<n; i++){",
		  "        x=-1;",
		  "        for(ll node=1; node<=n; node++){",
		  "            //if(dist[node]==INF) continue;",
		  "            for(pair<ll,ll> a : g[node]){",
		  "                if(dist[a.first]>dist[node]+a.second){",
		  "                    dist[a.first]=dist[node]+a.second;",
		  "                    par[a.first]=node;",
		  "                    x=a.first;",
		  "                }",
		  "            }",
		  "        }",
		  "        //if(!x) break;",
		  "    }",
		  "    if(x==-1){",
		  "        cout<<\"NO\"<<endl;",
		  "    }",
		  "    else{",
		  "        //x can be on any cycle or reachable from some cycle",
		  "        vl path;",
		  "        for (ll i=0; i<n; i++) x = par[x];",
		  "        ",
		  "        for(ll cur=x; ; cur=par[cur]) {",
		  "            //cout<<cur<<\" \";",
		  "            path.push_back (cur);",
		  "            if (cur == x && path.size() > 1) break;",
		  "          ",
		  "        }",
		  "        //cout<<endl;",
		  "        reverse(path.begin(), path.end());",
		  "        cout << \"YES\"<<endl;",
		  "       cout<<path<<endl;",
		  "    }",
		  "",
		  "}"
		],
		"description": "bellman_ford"
	  }
}