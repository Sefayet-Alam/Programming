{
	"sum of divisors for number 1 to n": {
		"prefix": "sum_Of_Divisors_1_to_n",
		"body": [
		  "const ll MOD = 1e9 + 7;",
		  "const ll TWO_MOD_INV = 500000004;",
		  "/** @return The sum of all numbers in [start, end] mod MOD. */",
		  "long long total_sum(long long start, long long end) {",
		  "	return (",
		  "		(((end - start + 1) % MOD) * ((start + end) % MOD) % MOD)",
		  "		* TWO_MOD_INV % MOD",
		  "	);",
		  "}",
		  "",
		  "ll sum_of_divisors_1_to_n(ll n){",
		  "    ll total = 0;",
		  "	ll at = 1;",
		  "	while (at <= n) {",
		  "	 ll add_amt = n / at;  // Our divisor to process",
		  "		// The largest number that still has the same value of q",
		  "	ll last_same = n / add_amt;",
		  "",
		  "		total = (total + add_amt * total_sum(at, last_same)) % MOD;",
		  "		at = last_same + 1;",
		  "	}",
		  "    return total;",
		  "}"
		],
		"description": "sum of divisors for number 1 to n"
	  }
}