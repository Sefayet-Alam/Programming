{
	"dijkstra_on_grid": {
		"prefix": "dijkstra_on_grid",
		"body": [
		  "vpll Move={ {1,0},{0,1}};",
		  "ll n,m;",
		  "ll grid[2][N];",
		  "ll dist[2][N];",
		  "ll vis[2][N];",
		  "bool isvalid(ll i,ll j){",
		  "    if(i>=2 || j>=m) return false;",
		  "    return true;",
		  "}",
		  "pair<ll,ll> par[2][N];",
		  "void dijkstra(ll srcx,ll srcy){",
		  "    QP<pair<ll,pair<ll,ll> >> pq;",
		  "    pq.push({0,{srcx,srcy}});",
		  "    dist[srcx][srcy]=grid[srcx][srcy];",
		  "    while(pq.size()){",
		  "        ll vx=pq.top().second.first;",
		  "        ll vy=pq.top().second.second;",
		  "        ll v_dist=pq.top().first;",
		  "        pq.pop();",
		  "        //if(dist[vx][vy]<v_dist) continue;",
		  "        for(auto it:Move){",
		  "            ll child_vx=vx+it.first;",
		  "            ll child_vy=vy+it.second;",
		  "            if(dist[vx][vy]+grid[child_vx][child_vy]<dist[child_vx][child_vy] && isvalid(child_vx,child_vy)){",
		  "                dist[child_vx][child_vy]=dist[vx][vy]+grid[child_vx][child_vy];",
		  "               par[child_vx][child_vy]={vx,vy};",
		  "               //cout<<child_vx<<\" \"<<child_vy<<\" \"<< par[child_vx][child_vy]<<endl;",
		  "                pq.push({dist[child_vx][child_vy],{child_vx,child_vy}});",
		  "            }",
		  "        }",
		  "    }",
		  "}",
		  "void reset(){",
		  "    for(ll i=0;i<2;i++){",
		  "        for(ll j=0;j<N;j++){",
		  "        dist[i][j]=M;",
		  "        }",
		  "    }",
		  "}"
		],
		"description": "dijkstra_on_grid"
	  }
}